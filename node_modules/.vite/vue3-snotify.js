import "./chunk-4GA3ULSV.js";
import {
  Fragment,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  defineComponent,
  normalizeClass,
  normalizeStyle,
  openBlock,
  renderList,
  resolveComponent,
  toDisplayString,
  withModifiers
} from "./chunk-OSC6VNQ2.js";
import "./chunk-DLRM6N3G.js";

// node_modules/vue3-snotify/dist/vue3-snotify.es.js
var t;
var i;
var o = Object.defineProperty;
var e = Object.defineProperties;
var n = Object.getOwnPropertyDescriptors;
var s = Object.getOwnPropertySymbols;
var a = Object.prototype.hasOwnProperty;
var r = Object.prototype.propertyIsEnumerable;
var c = (t2, i2, e2) => i2 in t2 ? o(t2, i2, { enumerable: true, configurable: true, writable: true, value: e2 }) : t2[i2] = e2;
var l = (t2, i2, o2) => (c(t2, typeof i2 != "symbol" ? i2 + "" : i2, o2), o2);
(i = t || (t = {})).leftTop = "leftTop", i.leftCenter = "leftCenter", i.leftBottom = "leftBottom", i.rightTop = "rightTop", i.rightCenter = "rightCenter", i.rightBottom = "rightBottom", i.centerTop = "centerTop", i.centerCenter = "centerCenter", i.centerBottom = "centerBottom";
var w = "simple";
var O = "success";
var C = "error";
var x = "warning";
var E = "info";
var S = "async";
var B = "confirm";
var P = "prompt";
var M = (t2, i2) => {
  for (const [o2, e2] of i2)
    t2[o2] = e2;
  return t2;
};
var z = defineComponent({ props: ["toast"], data: () => ({ isPromptFocused: false }), methods: { valueChanged(t2) {
  this.toast.value = t2.target.value, this.toast.eventEmitter.emit("input");
} } });
var F = ["id"];
var $ = ["for"];
var D = { class: "snotifyToast__input__labelContent" };
var H = M(z, [["render", function(t2, i2, o2, e2, n2, s2) {
  return openBlock(), createElementBlock("span", { class: normalizeClass(["snotifyToast__input", { "snotifyToast__input--filled": t2.isPromptFocused }]) }, [createBaseVNode("input", { onInput: i2[0] || (i2[0] = (...i3) => t2.valueChanged && t2.valueChanged(...i3)), class: "snotifyToast__input__field", type: "text", id: t2.toast.id, onFocus: i2[1] || (i2[1] = (i3) => t2.isPromptFocused = true), onBlur: i2[2] || (i2[2] = (i3) => t2.isPromptFocused = !!t2.toast.value.length) }, null, 40, F), createBaseVNode("label", { class: "snotifyToast__input__label", for: t2.toast.id }, [createBaseVNode("span", D, toDisplayString(t2.toast.config.placeholder), 1)], 8, $)], 2);
}]]);
var A = defineComponent({ props: ["toast"], methods: { remove() {
  this.$snotify.remove(this.toast.id);
} } });
var L = { class: "snotifyToast__buttons" };
var j = ["onClick"];
var I = defineComponent({ components: { SnotifyPrompt: H, SnotifyButton: M(A, [["render", function(t2, i2, o2, e2, n2, s2) {
  return openBlock(), createElementBlock("div", L, [(openBlock(true), createElementBlock(Fragment, null, renderList(t2.toast.config.buttons, (i3, o3) => (openBlock(), createElementBlock("button", { type: "button", key: o3, class: normalizeClass([{ "snotifyToast__buttons--bold": i3.bold }, i3.className]), onClick: withModifiers((o4) => i3.action ? i3.action(t2.toast) : t2.remove(), ["prevent", "stop"]) }, toDisplayString(i3.text), 11, j))), 128))]);
}]]) }, props: ["toastData"], emits: ["stateChanged"], data() {
  return { toast: this.toastData, animationFrame: 0, state: { paused: false, progress: 0, animation: "", isDestroying: false, promptType: P } };
}, computed: { toastTitle() {
  const t2 = this.toast.title;
  return t2.length > this.toast.config.titleMaxLength ? t2.slice(0, this.toast.config.titleMaxLength) : t2;
}, toastBody() {
  const t2 = this.toast.body;
  return t2.length > this.toast.config.bodyMaxLength ? t2.slice(0, this.toast.config.bodyMaxLength) : t2;
} }, methods: { initToast() {
  this.toast.config.timeout > 0 && this.startTimeout(0);
}, onClick() {
  this.toast.eventEmitter.emit("click"), this.toast.config.closeOnClick && this.$snotify.remove(this.toast.id);
}, onMouseEnter() {
  this.toast.eventEmitter.emit("mouseenter"), this.toast.config.pauseOnHover && (this.state.paused = true);
}, onMouseLeave() {
  this.toast.config.pauseOnHover && this.toast.config.timeout && (this.state.paused = false, this.startTimeout(this.toast.config.timeout * this.state.progress)), this.toast.eventEmitter.emit("mouseleave");
}, onExitTransitionEnd() {
  this.state.isDestroying || (this.initToast(), this.toast.eventEmitter.emit("shown"));
}, startTimeout(t2 = 0) {
  const i2 = performance.now(), o2 = () => {
    this.animationFrame = requestAnimationFrame((e2) => {
      const n2 = e2 + t2 - i2, s2 = Math.min(n2 / this.toast.config.timeout, 1);
      this.state.paused ? cancelAnimationFrame(this.animationFrame) : n2 < this.toast.config.timeout ? (this.state.progress = s2, o2()) : (this.state.progress = 1, cancelAnimationFrame(this.animationFrame), this.$snotify.emitter.emit("remove", this.toast.id));
    });
  };
  o2();
}, onRemove() {
  this.state.isDestroying = true, this.$emit("stateChanged", "beforeHide"), this.toast.eventEmitter.emit("beforeHide"), this.state.animation = this.toast.config.animation.exit, setTimeout(() => {
    this.$emit("stateChanged", "hidden"), this.state.animation = "snotifyToast--out", this.toast.eventEmitter.emit("hidden"), setTimeout(() => this.$snotify.remove(this.toast.id, true), this.toast.config.animation.time / 2);
  }, this.toast.config.animation.time / 2);
} }, created() {
  this.$snotify.emitter.on("remove", (t2) => {
    this.toast.id === t2 && this.onRemove();
  });
}, mounted() {
  this.$nextTick(() => {
    this.toast.eventEmitter.emit("mounted"), this.state.animation = "snotifyToast--in", this.$nextTick(() => {
      setTimeout(() => {
        this.$emit("stateChanged", "beforeShow"), this.toast.eventEmitter.emit("beforeShow"), this.state.animation = this.toast.config.animation.enter;
      }, this.toast.config.animation.time / 5);
    });
  });
}, unmounted() {
  cancelAnimationFrame(this.animationFrame), this.toast.eventEmitter.emit("destroyed");
} });
var N = { key: 0, class: "snotifyToast__progressBar" };
var R = { key: 0, class: "snotifyToast__title" };
var q = { key: 1, class: "snotifyToast__body" };
var G = { key: 4 };
var J = ["src"];
var K = ["innerHTML"];
var Q = M(defineComponent({ components: { Toast: M(I, [["render", function(t2, i2, o2, e2, n2, s2) {
  const a2 = resolveComponent("snotify-prompt"), r2 = resolveComponent("snotify-button");
  return openBlock(), createElementBlock("div", { class: normalizeClass(["snotifyToast animated", ["snotify-" + t2.toast.config.type, t2.state.animation, t2.toast.valid === void 0 ? "" : t2.toast.valid ? "snotifyToast--valid" : "snotifyToast--invalid"]]), style: normalizeStyle({ "-webkit-animation-duration": t2.toast.config.animation.time + "ms", "animation-duration": t2.toast.config.animation.time + "ms", "-webkit-transition": t2.toast.config.animation.time + "ms", transition: t2.toast.config.animation.time + "ms" }), onClick: i2[0] || (i2[0] = (...i3) => t2.onClick && t2.onClick(...i3)), onMouseenter: i2[1] || (i2[1] = (...i3) => t2.onMouseEnter && t2.onMouseEnter(...i3)), onMouseleave: i2[2] || (i2[2] = (...i3) => t2.onMouseLeave && t2.onMouseLeave(...i3)), onAnimationend: i2[3] || (i2[3] = (...i3) => t2.onExitTransitionEnd && t2.onExitTransitionEnd(...i3)) }, [t2.toast.config.showProgressBar && t2.toast.config.timeout > 0 ? (openBlock(), createElementBlock("div", N, [createBaseVNode("span", { class: "snotifyToast__progressBar__percentage", style: normalizeStyle({ width: 100 * t2.state.progress + "%" }) }, null, 4)])) : createCommentVNode("", true), t2.toast.config.html ? (openBlock(), createElementBlock("div", { key: 2, class: "snotifyToast__inner", innerHTML: t2.toast.config.html }, null, 8, K)) : (openBlock(), createElementBlock("div", { key: 1, class: normalizeClass(["snotifyToast__inner", { snotifyToast__noIcon: t2.toast.config.icon === false }]) }, [t2.toast.title ? (openBlock(), createElementBlock("div", R, toDisplayString(t2.toastTitle), 1)) : createCommentVNode("", true), t2.toast.body ? (openBlock(), createElementBlock("div", q, toDisplayString(t2.toastBody), 1)) : createCommentVNode("", true), t2.toast.config.type === t2.state.promptType ? (openBlock(), createBlock(a2, { key: 2, toast: t2.toast }, null, 8, ["toast"])) : createCommentVNode("", true), t2.toast.config.icon === void 0 ? (openBlock(), createElementBlock("div", { key: 3, class: normalizeClass(["snotify-icon", "snotify-icon--" + t2.toast.config.type]) }, null, 2)) : t2.toast.config.icon !== false ? (openBlock(), createElementBlock("div", G, [createBaseVNode("img", { class: "snotify-icon", src: t2.toast.config.icon }, null, 8, J)])) : createCommentVNode("", true)], 2)), t2.toast.config.buttons ? (openBlock(), createBlock(r2, { key: 3, toast: t2.toast }, null, 8, ["toast"])) : createCommentVNode("", true)], 38);
}]]) }, data: () => ({ notifications: { left_top: [], left_center: [], left_bottom: [], right_top: [], right_center: [], right_bottom: [], center_top: [], center_center: [], center_bottom: [] }, dockSize_a: 0, dockSize_b: 0, blockSize_a: 0, blockSize_b: 0, backdrop: -1, withBackdrop: [] }), methods: { getNotificationsForPos(t2) {
  return this.notifications[t2].slice(this.blockSize_a, this.blockSize_b);
}, setOptions(t2) {
  var i2, o2;
  if (this.$snotify.config.global) {
    const e2 = (i2 = this.$snotify.config.global) == null ? void 0 : i2.maxOnScreen, n2 = (o2 = this.$snotify.config.global) == null ? void 0 : o2.maxAtPosition;
    this.$snotify.config.global.newOnTop ? (e2 && (this.dockSize_a = -e2), this.dockSize_b = void 0, n2 && (this.blockSize_a = -n2), this.blockSize_b = void 0, this.withBackdrop = t2.filter((t3) => t3.config.backdrop >= 0)) : (this.dockSize_a = 0, e2 && (this.dockSize_b = e2), this.blockSize_a = 0, n2 && (this.blockSize_b = n2), this.withBackdrop = t2.filter((t3) => t3.config.backdrop >= 0).reverse());
  }
  this.notifications = this.splitToasts(t2.slice(this.dockSize_a, this.dockSize_b)), this.stateChanged("mounted");
}, stateChanged(t2) {
  if (this.withBackdrop.length)
    switch (t2) {
      case "mounted":
        this.backdrop < 0 && (this.backdrop = 0);
        break;
      case "beforeShow":
        const t3 = this.withBackdrop[this.withBackdrop.length - 1].config.backdrop;
        t3 && (this.backdrop = t3);
        break;
      case "beforeHide":
        this.withBackdrop.length === 1 && (this.backdrop = 0);
        break;
      case "hidden":
        this.withBackdrop.length === 1 && (this.backdrop = -1);
    }
  else
    this.backdrop >= 0 && (this.backdrop = -1);
}, splitToasts(i2) {
  const o2 = {};
  for (const e2 in t)
    t.hasOwnProperty(e2) && (o2[t[e2]] = []);
  return i2.forEach((t2) => {
    o2[t2.config.position].push(t2);
  }), o2;
} }, created() {
  this.$snotify.emitter.on("snotify", (t2) => {
    this.setOptions(t2);
  });
} }), [["render", function(t2, i2, o2, e2, n2, s2) {
  const a2 = resolveComponent("toast");
  return openBlock(), createElementBlock("div", null, [t2.backdrop >= 0 ? (openBlock(), createElementBlock("div", { key: 0, class: "snotify-backdrop", style: normalizeStyle({ opacity: t2.backdrop }) }, null, 4)) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList(t2.notifications, (i3, o3) => (openBlock(), createElementBlock("div", { class: normalizeClass(["snotify", "snotify-" + o3]), key: o3 }, [(openBlock(true), createElementBlock(Fragment, null, renderList(t2.getNotificationsForPos(o3), (i4) => (openBlock(), createBlock(a2, { toastData: i4, key: i4.id, onStateChanged: t2.stateChanged }, null, 8, ["toastData", "onStateChanged"]))), 128))], 2))), 128))]);
}]]);
function U(t2) {
  return { all: t2 = t2 || /* @__PURE__ */ new Map(), on: function(i2, o2) {
    var e2 = t2.get(i2);
    e2 ? e2.push(o2) : t2.set(i2, [o2]);
  }, off: function(i2, o2) {
    var e2 = t2.get(i2);
    e2 && (o2 ? e2.splice(e2.indexOf(o2) >>> 0, 1) : t2.set(i2, []));
  }, emit: function(i2, o2) {
    var e2 = t2.get(i2);
    e2 && e2.slice().map(function(t3) {
      t3(o2);
    }), (e2 = t2.get("*")) && e2.slice().map(function(t3) {
      t3(i2, o2);
    });
  } };
}
var V = class {
  constructor(t2, i2, o2, e2) {
    l(this, "eventEmitter", U()), l(this, "_eventsHolder", []), l(this, "value", ""), l(this, "valid"), this.id = t2, this.title = i2, this.body = o2, this.config = e2, this.config.type === P && (this.value = ""), this.on("hidden", () => {
      this._eventsHolder.forEach((t3) => {
        this.eventEmitter.off(t3.event, t3.action);
      });
    });
  }
  on(t2, i2) {
    return this._eventsHolder.push({ event: t2, action: i2 }), this.eventEmitter.on(t2, () => i2(this)), this;
  }
};
var W = { global: { newOnTop: true, maxOnScreen: 8, maxAtPosition: 8, oneAtTime: false, preventDuplicates: false }, toast: { timeout: 2e3, showProgressBar: true, type: w, closeOnClick: true, pauseOnHover: true, titleMaxLength: 16, bodyMaxLength: 150, backdrop: -1, icon: void 0, animation: { enter: "fadeIn", exit: "fadeOut", time: 400 }, html: void 0, position: t.rightBottom }, type: { [P]: { timeout: 0, closeOnClick: false, buttons: [{ text: "Ok", bold: true }, { text: "Cancel", bold: false }], placeholder: "Enter answer here...", type: P }, [B]: { timeout: 0, closeOnClick: false, buttons: [{ text: "Ok", bold: true }, { text: "Cancel", bold: false }], type: B }, [w]: { type: w }, [O]: { type: O }, [C]: { type: C }, [x]: { type: x }, [E]: { type: E }, [S]: { pauseOnHover: false, closeOnClick: false, timeout: 0, showProgressBar: false, type: S } } };
function X(t2) {
  return t2 && typeof t2 == "object" && !Array.isArray(t2) && t2 !== null;
}
function Y(...t2) {
  const i2 = {};
  if (!t2.length)
    return i2;
  for (; t2.length > 0; ) {
    const o2 = t2.shift();
    if (X(o2))
      for (const t3 in o2)
        X(o2[t3]) ? i2[t3] = Y(i2[t3], o2[t3]) : Object.assign(i2, { [t3]: o2[t3] });
  }
  return i2;
}
function Z(t2, i2, o2) {
  return { value: function(...t3) {
    var l2;
    return t3[0].config = (l2 = ((t4, i3) => {
      for (var o3 in i3 || (i3 = {}))
        a.call(i3, o3) && c(t4, o3, i3[o3]);
      if (s)
        for (var o3 of s(i3))
          r.call(i3, o3) && c(t4, o3, i3[o3]);
      return t4;
    })({}, t3[0].config), e(l2, n({ type: i2 }))), o2.value.apply(this, t3);
  } };
}
function tt(t2, i2, o2) {
  return i2 === S ? { value: function(...t3) {
    let i3;
    return i3 = t3.length === 2 ? { title: null, body: t3[0], config: null, action: t3[1] } : t3.length === 3 ? typeof t3[1] == "string" ? { title: t3[1], body: t3[0], config: null, action: t3[2] } : { title: null, body: t3[0], config: t3[2], action: t3[1] } : { title: t3[1], body: t3[0], config: t3[3], action: t3[2] }, o2.value.apply(this, [i3]);
  } } : { value: function(...t3) {
    let i3;
    return i3 = t3.length === 1 ? { title: null, body: t3[0], config: null } : t3.length === 3 ? { title: t3[1], body: t3[0], config: t3[2] } : { title: null, config: null, body: t3[0], [typeof t3[1] == "string" ? "title" : "config"]: t3[1] }, o2.value.apply(this, [i3]);
  } };
}
var it = Object.defineProperty;
var ot = Object.getOwnPropertyDescriptor;
var et = (t2, i2, o2, e2) => {
  for (var n2, s2 = e2 > 1 ? void 0 : e2 ? ot(i2, o2) : i2, a2 = t2.length - 1; a2 >= 0; a2--)
    (n2 = t2[a2]) && (s2 = (e2 ? n2(i2, o2, s2) : n2(s2)) || s2);
  return e2 && s2 && it(i2, o2, s2), s2;
};
var nt = class {
  constructor() {
    l(this, "emitter", U()), l(this, "notifications", []), l(this, "config", W);
  }
  emit() {
    this.emitter.emit("snotify", this.notifications.slice());
  }
  get(t2) {
    return this.notifications.find((i2) => i2.id === t2);
  }
  add(t2) {
    var i2;
    ((i2 = this.config.global) == null ? void 0 : i2.newOnTop) ? this.notifications.unshift(t2) : this.notifications.push(t2), this.emit();
  }
  remove(t2, i2) {
    return t2 ? i2 ? (this.notifications = this.notifications.filter((i3) => i3.id !== t2), this.emit()) : void this.emitter.emit("remove", t2) : this.clear();
  }
  clear() {
    this.notifications = [], this.emit();
  }
  button(t2, i2 = true, o2, e2 = false) {
    return { text: t2, action: i2 ? (t3) => {
      o2 && o2(t3), this.remove(t3.id);
    } : o2, bold: e2 };
  }
  create(t2) {
    var i2, o2, e2, n2, s2;
    if (((o2 = (i2 = this.config) == null ? void 0 : i2.global) == null ? void 0 : o2.oneAtTime) && this.notifications.length !== 0)
      return;
    if (((n2 = (e2 = this.config) == null ? void 0 : e2.global) == null ? void 0 : n2.preventDuplicates) && this.notifications.filter((i3) => {
      var o3;
      return i3.config.type === ((o3 = t2 == null ? void 0 : t2.config) == null ? void 0 : o3.type);
    }).length === 1)
      return;
    const a2 = Y(this.config.toast, this.config.type ? [(s2 = t2.config) == null ? void 0 : s2.type] : null, t2.config), r2 = new V(a2.id ? a2.id : Math.floor(Math.random() * (Date.now() - 1)) + 1, t2.title ? t2.title : "", t2.body ? t2.body : "", a2);
    return this.add(r2), r2;
  }
  setDefaults(t2) {
    return this.config = Y(this.config, t2);
  }
  simple(t2) {
    return this.create(t2);
  }
  success(t2) {
    return this.create(t2);
  }
  error(t2) {
    return this.create(t2);
  }
  info(t2) {
    return this.create(t2);
  }
  warning(t2) {
    return this.create(t2);
  }
  confirm(t2) {
    return this.create(t2);
  }
  prompt(t2) {
    return this.create(t2);
  }
};
et([tt, Z], nt.prototype, "simple", 1), et([tt, Z], nt.prototype, "success", 1), et([tt, Z], nt.prototype, "error", 1), et([tt, Z], nt.prototype, "info", 1), et([tt, Z], nt.prototype, "warning", 1), et([tt, Z], nt.prototype, "confirm", 1), et([tt, Z], nt.prototype, "prompt", 1);
var st = { install: (t2, i2 = {}) => {
  const o2 = new nt();
  o2.setDefaults(i2), t2.config.globalProperties.$snotify = o2, t2.component("vue-snotify", Q);
} };

// dep:vue3-snotify
var vue3_snotify_default = st;
export {
  vue3_snotify_default as default
};
//# sourceMappingURL=vue3-snotify.js.map
